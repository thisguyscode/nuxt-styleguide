/* ==========================================================================
   # BACKGROUND-COLOR
========================================================================== */

/**
 *  Apply simple background-color / color combos
 */



/* Dependencies
========================================================================== */

// VALUES
@import "~assets/styles/values/values.colors";

// TOOLS
@import "~assets/styles/tools/tools.iterate-colors";
@import "~assets/styles/tools/tools.contrasting-color";





/* Variables
========================================================================== */
$contrast-colors: (
  'neutral-00': $neutral-00,
  'neutral-05': $neutral-05,
  'neutral-10': $neutral-10,
  'neutral-15': $neutral-15,
  'neutral-20': $neutral-20,
  'neutral-30': $neutral-30,
  'neutral-70': $neutral-70,
  'neutral-80': $neutral-80,
  'neutral-85': $neutral-85,
  'neutral-90': $neutral-90,
  'neutral-95': $neutral-95,
  'neutral-100': $neutral-100,
  'semi-neutral-00': rgba($neutral-00, .7),
  'semi-neutral-100': rgba($neutral-100, .7)
);

$lightness-colors: (
  'darkest': $darkest,
  'dark': $lightness-10,
  'light': $lightness-90,
  'lightest': $lightest
);

$common-colors: (
  'blue': $blue,
  'orange': $orange,
  'green': $green,
  'purple': $purple,
  'yellow': $yellow,
  'red': $red
);




/* By contrast
========================================================================== */
@each $contrast-color-namespace, $contrast-color in $contrast-colors {

  .#{$contrast-color-namespace} {
    background-color: $contrast-color;
    color: contrasting-color($contrast-color, $lightest, $darkest);
  }

  .hover-#{$contrast-color-namespace} {
    &:hover {
      background-color: $contrast-color;
      color: contrasting-color($contrast-color, $lightest, $darkest);
    }
  }
  
}





/* By lightness
========================================================================== */
@each $lightness-color-namespace, $lightness-color in $lightness-colors {
  
  .#{$lightness-color-namespace} {
    background-color: $lightness-color;
    color: contrasting-color($lightness-color, $lightest, $darkest);
  }

  .hover-#{$lightness-color-namespace} {
    &:hover {
      background-color: $lightness-color;
      color: contrasting-color($lightness-color, $lightest, $darkest);
    }
  }
  
}




/* Common colors
========================================================================== */
@each $common-color-namespace, $common-color in $common-colors {
  
  .#{$common-color-namespace} {
    background-color: $common-color;
    color: contrasting-color($common-color, $lightest, $darkest);
  }

  .hover-#{$common-color-namespace} {
    &:hover {
      background-color: $common-color;
      color: contrasting-color($common-color, $lightest, $darkest);
    }
  }
  
}





/* Misc
========================================================================== */

.each-different {
  @include iterate-colors();
}