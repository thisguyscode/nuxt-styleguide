/* ==========================================================================
   # GRIDLEX
========================================================================== */

/**
 *  ___NOTES___
 */



/* Dependencies
========================================================================== */
// NONE




/* Base class
========================================================================== */
// Make the breakpoints
@mixin bp($breakpoint) {
  $query: map-get($gl-mq-list, $breakpoint);
  @if $query != null {
    @media (max-width: #{nth($query, 1)}) {
      @content;
    }
  }
}


$glp_col-1: (100%/12);
$glp_col-2: ($glp_col-1*2);
$glp_col-3: ($glp_col-1*3);
$glp_col-4: ($glp_col-1*4);
$glp_col-5: ($glp_col-1*5);
$glp_col-6: ($glp_col-1*6);
$glp_col-7: ($glp_col-1*7);
$glp_col-8: ($glp_col-1*8);
$glp_col-9: ($glp_col-1*9);
$glp_col-10: ($glp_col-1*10);
$glp_col-11: ($glp_col-1*11);
$glp_col-12: 100%;

$glp_col-5-12: (100%/5);
$glp_col-7-12: (100%/7);
$glp_col-8-12: (100%/8);
$glp_col-9-12: (100%/9);
$glp_col-10-12: (100%/10);
$glp_col-11-12: (100%/11);

// Function to generate the grid by number
@mixin makeGridByNumber($grid) {
  #{$grid}-1 > #{$gl-colName},
  #{$grid}-1 > #{$gl-colName}-,
  #{$grid}-1 > #{$gl-colName}_ {
    flex-basis: $glp_col-12;
    max-width: $glp_col-12;
  }

  #{$grid}-2 > #{$gl-colName},
  #{$grid}-2 > #{$gl-colName}-,
  #{$grid}-2 > #{$gl-colName}_ {
    flex-basis: $glp_col-6;
    max-width: $glp_col-6;
  }

  #{$grid}-3 > #{$gl-colName},
  #{$grid}-3 > #{$gl-colName}-,
  #{$grid}-3 > #{$gl-colName}_ {
    flex-basis: $glp_col-4;
    max-width: $glp_col-4;
  }

  #{$grid}-4 > #{$gl-colName},
  #{$grid}-4 > #{$gl-colName}-,
  #{$grid}-4 > #{$gl-colName}_ {
    flex-basis: $glp_col-3;
    max-width: $glp_col-3;
  }
  #{$grid}-5 > #{$gl-colName},
  #{$grid}-5 > #{$gl-colName}-,
  #{$grid}-5 > #{$gl-colName}_ {
    flex-basis: $glp_col-5-12;
    max-width: $glp_col-5-12;
  }
  #{$grid}-6 > #{$gl-colName},
  #{$grid}-6 > #{$gl-colName}-,
  #{$grid}-6 > #{$gl-colName}_ {
    flex-basis: $glp_col-2;
    max-width: $glp_col-2;
  }
  #{$grid}-7 > #{$gl-colName},
  #{$grid}-7 > #{$gl-colName}-,
  #{$grid}-7 > #{$gl-colName}_ {
    flex-basis: $glp_col-7-12;
    max-width: $glp_col-7-12;
  }
  #{$grid}-8 > #{$gl-colName},
  #{$grid}-8 > #{$gl-colName}-,
  #{$grid}-8 > #{$gl-colName}_ {
    flex-basis: $glp_col-8-12;
    max-width: $glp_col-8-12;
  }
  #{$grid}-9 > #{$gl-colName},
  #{$grid}-9 > #{$gl-colName}-,
  #{$grid}-9 > #{$gl-colName}_ {
    flex-basis: $glp_col-9-12;
    max-width: $glp_col-9-12;
  }
  #{$grid}-10 > #{$gl-colName},
  #{$grid}-10 > #{$gl-colName}-,
  #{$grid}-10 > #{$gl-colName}_ {
    flex-basis: $glp_col-10-12;
    max-width: $glp_col-10-12;
  }
  #{$grid}-11 > #{$gl-colName},
  #{$grid}-11 > #{$gl-colName}- {
    flex-basis: $glp_col-11-12;
    max-width: $glp_col-11-12;
  }
  #{$grid}-12 > #{$gl-colName},
  #{$grid}-12 > #{$gl-colName}-,
  #{$grid}-12 > #{$gl-colName}_ {
    flex-basis: $glp_col-1;
    max-width: $glp_col-1;
  }
}

// Function to generate the grid by columns
@mixin makeCol($col)
{
  #{$gl-gridName},
  #{$gl-gridName}-,
  #{$gl-gridName}_ {
    > #{$col}-1{ flex-basis: $glp_col-1; max-width: $glp_col-1; }
    > #{$col}-2{ flex-basis: $glp_col-2; max-width: $glp_col-2; }
    > #{$col}-3{ flex-basis: $glp_col-3; max-width: $glp_col-3; }
    > #{$col}-4{ flex-basis: $glp_col-4; max-width: $glp_col-4; }
    > #{$col}-5{ flex-basis: $glp_col-5; max-width: $glp_col-5; }
    > #{$col}-6{ flex-basis: $glp_col-6; max-width: $glp_col-6; }
    > #{$col}-7{ flex-basis: $glp_col-7; max-width: $glp_col-7; }
    > #{$col}-8{ flex-basis: $glp_col-8; max-width: $glp_col-8; }
    > #{$col}-9{ flex-basis: $glp_col-9; max-width: $glp_col-9; }
    > #{$col}-10{ flex-basis: $glp_col-10; max-width: $glp_col-10; }
    > #{$col}-11{ flex-basis: $glp_col-11; max-width: $glp_col-11; }
    > #{$col}-12{ flex-basis: $glp_col-12; max-width: $glp_col-12; }
  }
}

// Function to generate the -first & -last base on mq keys (as _lg-first)
@mixin makeFirstLast($mq)
{
  #{$gl-gridName},
  #{$gl-gridName}-,
  #{$gl-gridName}_ {
    #{$mq}-first{
      order: -1;
    }
    #{$mq}-last{
      order: 1;
    }
  }
}

// Function to generate the offset
@mixin makeOff($off)
{
  #{$gl-gridName},
  #{$gl-gridName}-,
  #{$gl-gridName}_ {
    > data-push-left*=#{$off}-0{ margin-left: 0; }
    > data-push-left*=#{$off}-1{ margin-left: $glp_col-1; }
    > data-push-left*=#{$off}-2{ margin-left: $glp_col-2; }
    > data-push-left*=#{$off}-3{ margin-left: $glp_col-3; }
    > data-push-left*=#{$off}-4{ margin-left: $glp_col-4; }
    > data-push-left*=#{$off}-5{ margin-left: $glp_col-5; }
    > data-push-left*=#{$off}-6{ margin-left: $glp_col-6; }
    > data-push-left*=#{$off}-7{ margin-left: $glp_col-7; }
    > data-push-left*=#{$off}-8{ margin-left: $glp_col-8; }
    > data-push-left*=#{$off}-9{ margin-left: $glp_col-9; }
    > data-push-left*=#{$off}-10{ margin-left: $glp_col-10; }
    > data-push-left*=#{$off}-11{ margin-left: $glp_col-11; }

    > data-push-right*=#{$off}-0{ margin-right: 0; }
    > data-push-right*=#{$off}-1{ margin-right: $glp_col-1; }
    > data-push-right*=#{$off}-2{ margin-right: $glp_col-2; }
    > data-push-right*=#{$off}-3{ margin-right: $glp_col-3; }
    > data-push-right*=#{$off}-4{ margin-right: $glp_col-4; }
    > data-push-right*=#{$off}-5{ margin-right: $glp_col-5; }
    > data-push-right*=#{$off}-6{ margin-right: $glp_col-6; }
    > data-push-right*=#{$off}-7{ margin-right: $glp_col-7; }
    > data-push-right*=#{$off}-8{ margin-right: $glp_col-8; }
    > data-push-right*=#{$off}-9{ margin-right: $glp_col-9; }
    > data-push-right*=#{$off}-10{ margin-right: $glp_col-10; }
    > data-push-right*=#{$off}-11{ margin-right: $glp_col-11; }
  }
}